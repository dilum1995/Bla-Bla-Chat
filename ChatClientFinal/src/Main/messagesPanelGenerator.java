/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import WebService.Message;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Dilum De Siva
 */
public class messagesPanelGenerator extends javax.swing.JPanel {

    Thread mainThread;
    ArrayList<Message> threadList;
    DefaultListModel<Message> list;
    WebService.MessageThread thread;

    /**
     * Creates new form MessagesView
     */
    public messagesPanelGenerator(WebService.MessageThread thread) {
        initComponents();
        this.thread = thread;
        threadList = (ArrayList) this.thread.getAllMessages();
        list = new DefaultListModel<>();
        lblThreadTittle.setText(this.thread.getThreadName());
        fullList();
        mainThread = new Thread(new Update());
        mainThread.setDaemon(true);
        mainThread.start();
    }

    private void addElements(DefaultListModel<Message> listModel, ArrayList<Message> thread) {
        listModel = new DefaultListModel<>();
        for (Message t : thread) {
            listModel.addElement(t);
        }
        listMsg.setModel(listModel);
        listMsg.setCellRenderer(new MessageViewGenerator());
    }

    private void updateMessages() {
        this.threadList = (ArrayList<Message>) getThreadMessage(thread.getThreadId());
        fullList();
    }

    public void fullList() {
        this.threadList = (ArrayList<Message>) getThreadMessage(thread.getThreadId());
        addElements(list, threadList);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listMsg = new javax.swing.JList<>();
        lblThreadTittle = new javax.swing.JLabel();
        txtMsgFeild = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(13, 127, 137));
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));

        jScrollPane1.setViewportView(listMsg);

        lblThreadTittle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblThreadTittle.setForeground(new java.awt.Color(255, 255, 255));
        lblThreadTittle.setText("Thread Tittle");

        btnSend.setForeground(new java.awt.Color(13, 127, 137));
        btnSend.setText("send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnBack.setForeground(new java.awt.Color(13, 127, 137));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(txtMsgFeild, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblThreadTittle)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBack))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThreadTittle)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMsgFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSend))
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:

        String message = txtMsgFeild.getText();
        addMessage(message, Main.BlaBlaClient.currentUser, thread.getThreadId());
        updateMessages();
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        BlaBlaClient.changeWindow(new messageThreadPanelGenerator(), mainThread);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSend;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblThreadTittle;
    private javax.swing.JList<WebService.Message> listMsg;
    private javax.swing.JTextField txtMsgFeild;
    // End of variables declaration//GEN-END:variables

    private static java.util.List<WebService.Message> getThreadMessage(int threadID) {
        WebService.ChatService_Service service = new WebService.ChatService_Service();
        WebService.ChatService port = service.getChatServicePort();
        return port.getThreadMessage(threadID);
    }

    private static Message addMessage(java.lang.String messageBody, WebService.User sender, int threadId) {
        WebService.ChatService_Service service = new WebService.ChatService_Service();
        WebService.ChatService port = service.getChatServicePort();
        return port.addMessage(messageBody, sender, threadId);
    }

    class Update implements Runnable {
        @Override
        public void run() {
            while (true) {
                fullList();
                try {
                    Thread.sleep(4000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(messagesPanelGenerator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }

}
