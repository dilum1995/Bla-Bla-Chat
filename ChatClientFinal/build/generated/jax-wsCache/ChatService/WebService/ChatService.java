
package WebService;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ChatService", targetNamespace = "http://ServicesGenerator/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ChatService {


    /**
     * 
     * @param name
     * @param user
     * @return
     *     returns WebService.MessageThread
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addThread", targetNamespace = "http://ServicesGenerator/", className = "WebService.AddThread")
    @ResponseWrapper(localName = "addThreadResponse", targetNamespace = "http://ServicesGenerator/", className = "WebService.AddThreadResponse")
    @Action(input = "http://ServicesGenerator/ChatService/addThreadRequest", output = "http://ServicesGenerator/ChatService/addThreadResponse")
    public MessageThread addThread(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "user", targetNamespace = "")
        User user);

    /**
     * 
     * @param threadId
     * @param messageBody
     * @param sender
     * @return
     *     returns WebService.Message
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addMessage", targetNamespace = "http://ServicesGenerator/", className = "WebService.AddMessage")
    @ResponseWrapper(localName = "addMessageResponse", targetNamespace = "http://ServicesGenerator/", className = "WebService.AddMessageResponse")
    @Action(input = "http://ServicesGenerator/ChatService/addMessageRequest", output = "http://ServicesGenerator/ChatService/addMessageResponse")
    public Message addMessage(
        @WebParam(name = "messageBody", targetNamespace = "")
        String messageBody,
        @WebParam(name = "sender", targetNamespace = "")
        User sender,
        @WebParam(name = "threadId", targetNamespace = "")
        int threadId);

    /**
     * 
     * @param user
     * @return
     *     returns java.util.List<WebService.MessageThread>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMessages", targetNamespace = "http://ServicesGenerator/", className = "WebService.GetMessages")
    @ResponseWrapper(localName = "getMessagesResponse", targetNamespace = "http://ServicesGenerator/", className = "WebService.GetMessagesResponse")
    @Action(input = "http://ServicesGenerator/ChatService/getMessagesRequest", output = "http://ServicesGenerator/ChatService/getMessagesResponse")
    public List<MessageThread> getMessages(
        @WebParam(name = "user", targetNamespace = "")
        User user);

    /**
     * 
     * @param threadID
     * @return
     *     returns java.util.List<WebService.Message>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getThreadMessage", targetNamespace = "http://ServicesGenerator/", className = "WebService.GetThreadMessage")
    @ResponseWrapper(localName = "getThreadMessageResponse", targetNamespace = "http://ServicesGenerator/", className = "WebService.GetThreadMessageResponse")
    @Action(input = "http://ServicesGenerator/ChatService/getThreadMessageRequest", output = "http://ServicesGenerator/ChatService/getThreadMessageResponse")
    public List<Message> getThreadMessage(
        @WebParam(name = "threadID", targetNamespace = "")
        int threadID);

}
